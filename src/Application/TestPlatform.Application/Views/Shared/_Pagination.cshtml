<nav aria-label="Pagination">
    <ul class="pagination justify-content-end">
        @{
            var indexOfFirstPageLinkBeforeEllipsisAppears = Model.CurrentPage - Model.SiblingCount - 1 - 1 - Model.BoundaryCount;
            var indexOfLastPageLinkAfterEllipsisDisappears = Model.PagesCount - Model.BoundaryCount - Model.CurrentPage - Model.SiblingCount - 1;
        }

        <li class="page-item">
            @{
                var previousPage = Model.CurrentPage - 1;

                var firstPageNumber = 1;
                var isFirstPageSelected = Model.CurrentPage == firstPageNumber;
                var firstPageLinkDisabledClass = isFirstPageSelected ? "disabled" : string.Empty;
            }
            <a class="page-link @firstPageLinkDisabledClass" asp-action="Index" asp-route-page="@previousPage" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        @for (var boundaryIndex = 1; boundaryIndex <= Model.BoundaryCount; boundaryIndex++)
        {
            var isPageLinkSelected = boundaryIndex == Model.CurrentPage;
            var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;
            <li class="page-item @pageLinkActiveClass">
                <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@boundaryIndex">@boundaryIndex</a>
            </li>
        }

        @if (indexOfFirstPageLinkBeforeEllipsisAppears > 0)
        {
            <li class="page-item">
                <a class="page-link">...</a>
            </li>
        }

        @{
            var startingIndexAfterBoundary = Model.CurrentPage - Model.SiblingCount;
            if (startingIndexAfterBoundary - Model.BoundaryCount - 1 <= 1)
            {
                startingIndexAfterBoundary = Model.BoundaryCount + 1;
            }
            else if (indexOfLastPageLinkAfterEllipsisDisappears <= 0)
            {
                startingIndexAfterBoundary = Model.PagesCount - Model.BoundaryCount - Model.SiblingCount - 1 - Model.SiblingCount;
            }

            var endingIndexBeforeBoundary = Model.CurrentPage + Model.SiblingCount;
            if (Model.PagesCount - Model.BoundaryCount - endingIndexBeforeBoundary <= 1)
            {
                endingIndexBeforeBoundary = Model.PagesCount - Model.BoundaryCount;
            }
            else if (indexOfFirstPageLinkBeforeEllipsisAppears <= 0)
            {
                // Boundary + Sibling + Current Page Link + Sibling + 1 (because we start the loop from 1)
                endingIndexBeforeBoundary = Model.BoundaryCount + Model.SiblingCount + 1 + Model.SiblingCount + 1;
            }
        }
        @for (var pageIndex = startingIndexAfterBoundary; pageIndex <= endingIndexBeforeBoundary; pageIndex++)
        {
            var isPageLinkSelected = pageIndex == Model.CurrentPage;
            var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;

            <li class="page-item @pageLinkActiveClass">
                <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@pageIndex">@pageIndex</a>
            </li>
        }

        @if (indexOfLastPageLinkAfterEllipsisDisappears > 0)
        {
            <li class="page-item">
                <a class="page-link">...</a>
            </li>
        }

        @if (Model.PagesCount != 1)
        {
            @for (var boundaryIndex = Model.PagesCount - Model.BoundaryCount + 1; boundaryIndex <= Model.PagesCount; boundaryIndex++)
            {
                var isPageLinkSelected = boundaryIndex == Model.CurrentPage;
                var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;
                <li class="page-item @pageLinkActiveClass">
                    <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@boundaryIndex">@boundaryIndex</a>
                </li>
            }
        }

        <li class="page-item">
            @{
                var nextPage = Model.CurrentPage + 1;

                var isLastPageSelected = Model.CurrentPage == Model.PagesCount;
                var lastPageLinkDisabledClass = isLastPageSelected ? "disabled" : string.Empty;
            }
            <a class="page-link @lastPageLinkDisabledClass" asp-action="Index" asp-route-page="@nextPage" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>