@if (Model.PagesCount != 1) 
{
    <nav aria-label="Pagination">
        <ul class="pagination justify-content-end">
            @{
                var indexOfFirstPageLinkBeforeEllipsisAppears = Model.CurrentPage - Model.SiblingCount - 1 - 1 - Model.BoundaryCount;
                var indexOfLastPageLinkAfterEllipsisDisappears = Model.PagesCount - Model.BoundaryCount - Model.CurrentPage - Model.SiblingCount - 1;

                // TODO change the name of the variable
                var sum = Model.BoundaryCount + Model.SiblingCount + 1 + Model.SiblingCount;
            }

            @* Previous button *@
            <li class="page-item">
                @{
                    var previousPage = Model.CurrentPage - 1;

                    var firstPageNumber = 1;
                    var isFirstPageSelected = Model.CurrentPage == firstPageNumber;
                    var firstPageLinkDisabledClass = isFirstPageSelected ? "disabled" : string.Empty;
                }
                <a class="page-link @firstPageLinkDisabledClass" asp-action="Index" asp-route-page="@previousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @* --Previous button *@

            @* Page links from front boundary *@
            @for (var boundaryIndex = 1; boundaryIndex <= Model.BoundaryCount; boundaryIndex++)
            {
                var isPageLinkSelected = boundaryIndex == Model.CurrentPage;
                var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;
                <li class="page-item @pageLinkActiveClass">
                    <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@boundaryIndex">@boundaryIndex</a>
                </li>
            }
            @* --Page links from front boundary *@

            @* Ellipsis between the page links *@
            @if (indexOfFirstPageLinkBeforeEllipsisAppears > 0)
            {
                <li class="page-item">
                    <a class="page-link">...</a>
                </li>
            }
            @* --Ellipsis between the page links *@

            @* Page links with siblings around *@
            @{
                // starting index of rendering page links
                var startingIndexAfterBoundary = Model.CurrentPage - Model.SiblingCount;
                // if the starting index is smaller than the beginning boundary
                // then take the element after boundary
                if (startingIndexAfterBoundary - Model.BoundaryCount - 1 <= 1)
                {
                    startingIndexAfterBoundary = Model.BoundaryCount + 1;
                }
                // if the starting index is at the last pages
                // then set the index to specific value so we can see the last few pages
                else if (indexOfLastPageLinkAfterEllipsisDisappears <= 0)
                {
                    // PagesCounet - (Boundary + Sibling + Current Page Link + Sibling)
                    startingIndexAfterBoundary = Model.PagesCount - sum;
                }
                
                // ending index of rendering page links
                var endingIndexBeforeBoundary = Model.CurrentPage + Model.SiblingCount;
                // if the ending index is bigger than the ending boundary
                // then take the element before boundary
                if (Model.PagesCount - Model.BoundaryCount - endingIndexBeforeBoundary <= 1)
                {
                    endingIndexBeforeBoundary = Model.PagesCount - Model.BoundaryCount;
                }
                // if the ending index is at the first pages
                // then set the index to specific value so we can see the first few pages
                else if (indexOfFirstPageLinkBeforeEllipsisAppears <= 0)
                {
                    // Boundary + Sibling + Current Page Link + Sibling + 1 (because we start the loop from 1)
                    endingIndexBeforeBoundary = sum + 1;
                }
            }
            @for (var pageIndex = startingIndexAfterBoundary; pageIndex <= endingIndexBeforeBoundary; pageIndex++)
            {
                var isPageLinkSelected = pageIndex == Model.CurrentPage;
                var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;

                <li class="page-item @pageLinkActiveClass">
                    <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@pageIndex">@pageIndex</a>
                </li>
            }
            @* --Page links with siblings around *@

            @* Ellipsis between the page links *@
            @if (indexOfLastPageLinkAfterEllipsisDisappears > 0)
            {
                <li class="page-item">
                    <a class="page-link">...</a>
                </li>
            }
            @* --Ellipsis between the page links *@

            @* Page links from back  boundary *@
            @if (Model.PagesCount != 1)
            {
                @for (var boundaryIndex = Model.PagesCount - Model.BoundaryCount + 1; boundaryIndex <= Model.PagesCount; boundaryIndex++)
                {
                    var isPageLinkSelected = boundaryIndex == Model.CurrentPage;
                    var pageLinkActiveClass = isPageLinkSelected ? "active" : string.Empty;
                    <li class="page-item @pageLinkActiveClass">
                        <a class="page-link" asp-controller="Users" asp-action="Index" asp-route-page="@boundaryIndex">@boundaryIndex</a>
                    </li>
                }
            }
            @* --Page links from back boundary *@

            @* Next button *@
            <li class="page-item">
                @{
                    var nextPage = Model.CurrentPage + 1;

                    var isLastPageSelected = Model.CurrentPage == Model.PagesCount;
                    var lastPageLinkDisabledClass = isLastPageSelected ? "disabled" : string.Empty;
                }
                <a class="page-link @lastPageLinkDisabledClass" asp-action="Index" asp-route-page="@nextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            @* --Next button *@
        </ul>
    </nav>
}